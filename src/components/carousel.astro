---
import { Image } from "astro:assets";
import "@splidejs/splide/css";
import { Splide, SplideSlide } from "astro-splide";

interface CarouselItem {
  img_src: string;
  img_alt: string;
  width: number;
  height: number;
  date: string;
  attribution_name: string;
  attribution_url: string;
  blur: boolean;
}

interface Props {
  items: CarouselItem[];
  class?: string;
}

const { items } = Astro.props;

function formatDate(dateStr: string) {
  // Create a new Date object using the year and month parts
  const [year, month] = dateStr.split("-");
  const date = new Date(parseInt(year), parseInt(month) - 1); // Month is 0-indexed

  // Get the month name in short form (e.g., 'Jan') and last 2 digits of year
  const monthName = date.toLocaleString(undefined, { month: "short" });
  const shortYear = year.slice(-2);

  return `${monthName} '${shortYear}`;
}

const _items = items.map((item) => ({
  ...item,
  date: formatDate(item.date),
}));
---

<div
  class="overflow-hidden rounded-lg border-2 bg-white transition-border-radius hover:rounded-none dark:border-slate-500 dark:bg-slate-800"
>
  <Splide options={{ type: "loop", heightRatio: 9 / 16 }}>
    {
      _items.map((item, index) => (
        <SplideSlide class="flex flex-col">
          <figure class="relative my-0 max-h-full">
            <Image
              src={item.img_src}
              alt={item.img_alt}
              width={item.width}
              height={item.height}
              loading="lazy"
              class="mx-auto my-0 max-h-full object-contain"
            />

            <figcaption class="absolute bottom-0 right-0 rounded-t-lg bg-slate-100 px-2 py-1 hover:opacity-50 dark:bg-slate-500 dark:text-neutral-200">
              <div class="flex">
                <span class="mr-0.5">ðŸŽ¨</span>
                <a
                  href={item.attribution_url}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="font-medium italic underline"
                >
                  {item.attribution_name.trim()}
                </a>
                <span>, {item.date}</span>
              </div>
            </figcaption>
          </figure>
        </SplideSlide>
      ))
    }
  </Splide>
</div>
